from django.contrib.auth.views import LoginView
from django.urls import reverse_lazy
from django.shortcuts import render, redirect
from django.contrib import messages
from django.contrib.auth.decorators import login_required
from django.contrib.auth import login

from .forms import (
    CustomLoginForm,
    CustomUserCreationForm,
    ProfileForm,
)

# üîë –ö–∞—Å—Ç–æ–º–Ω–∞—è –≤—å—é—à–∫–∞ –ª–æ–≥–∏–Ω–∞
class CustomLoginView(LoginView):
    template_name = "registration/login.html"
    authentication_form = CustomLoginForm
    success_url = reverse_lazy("home")

    def get_success_url(self):
        return self.success_url


# üè† –î–æ–º–∞—à–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
def home_view(request):
    return render(request, "home.html")


# üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
def register(request):
    if request.method == "POST":
        form = CustomUserCreationForm(request.POST)
        if form.is_valid():
            user = form.save()
            login(request, user)  # —Å—Ä–∞–∑—É –∞–≤—Ç–æ—Ä–∏–∑—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            messages.success(request, "¬°Registro completado con √©xito!")
            return redirect("home")
        else:
            messages.error(request, "Por favor corrige los errores.")
    else:
        form = CustomUserCreationForm()

    return render(request, "registration/registration_form.html", {"form": form})


# üë§ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è (—Ç—Ä–µ–±—É–µ—Ç –≤—Ö–æ–¥–∞)
@login_required
def profile(request):
    if request.method == "POST":
        form = ProfileForm(request.POST, instance=request.user)
        if form.is_valid():
            form.save()
            messages.success(request, "Perfil actualizado correctamente.")
            return redirect("profile")
        else:
            messages.error(request, "Por favor corrige los errores.")
    else:
        form = ProfileForm(instance=request.user)

    return render(request, "registration/profile_form.html", {"form": form})


